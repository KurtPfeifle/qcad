
language: cpp

cache: apt

compiler:
    - gcc

env:
    global:
        - MAKEFLAGS="-j2"
    matrix:
        - QT_BASE=48
        #- QT_BASE=51
        #- QT_BASE=52
        #- QT_BASE=53
        #- QT_BASE=54
        #- QT_BASE=55
        #- QT_BASE=56
        #- QT_BASE=57
        #- QT_BASE=58
        #- QT_BASE=59

sudo: required

before_install:
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
      #- if [ "$QT_BASE" = "50" ] ; then sudo add-apt-repository ppa:beineri/opt-qt502-trusty -y ; fi
      #- if [ "$QT_BASE" = "51" ] ; then sudo add-apt-repository ppa:beineri/opt-qt511-trusty -y ; fi
      #- if [ "$QT_BASE" = "52" ] ; then sudo add-apt-repository ppa:beineri/opt-qt521-trusty -y ; fi
      #- if [ "$QT_BASE" = "53" ] ; then sudo add-apt-repository ppa:beineri/opt-qt532-trusty -y ; fi
      #- if [ "$QT_BASE" = "54" ] ; then sudo add-apt-repository ppa:beineri/opt-qt542-trusty -y ; fi
      #- if [ "$QT_BASE" = "55" ] ; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y ; fi
      #- if [ "$QT_BASE" = "56" ] ; then sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y ; fi
      #- if [ "$QT_BASE" = "57" ] ; then sudo add-apt-repository ppa:beineri/opt-qt571-trusty -y ; fi
      #- if [ "$QT_BASE" = "58" ] ; then sudo add-apt-repository ppa:beineri/opt-qt58-trusty  -y ; fi
      #- if [ "$QT_BASE" = "59" ] ; then sudo add-apt-repository ppa:beineri/opt-qt593-trusty -y ; fi
    - sudo add-apt-repository ppa:ximion/packagekit -y
    - sudo apt-get update -qq
    - wget http://download.qt.io/archive/qt/4.8/4.8.4/qt-everywhere-opensource-src-4.8.4.tar.gz
    - tar xzf qt-everywhere-opensource-src-4.8.4.tar.gz

install:
      #- if [ "$QT_BASE" = "48" ] ; then sudo apt-get install -qq qt4-qmake libqt4-gui libqt4-core libqt4-dev ; fi
      #- if [ "$QT_BASE" = "50" ] ; then sudo apt-get install -qq qtbase  qtxmlpatterns qtsvg; source /opt/qt5/bin/qt5-env.sh ; fi
      #- if [ "$QT_BASE" = "51" ] ; then sudo apt-get install -qq qt51base qt51xmlpatterns qt51svg; source /opt/qt51/bin/qt51-env.sh ; fi
      #- if [ "$QT_BASE" = "52" ] ; then sudo apt-get install -qq qt52base qt52xmlpatterns qt52svg; source /opt/qt52/bin/qt52-env.sh ; fi
      #- if [ "$QT_BASE" = "53" ] ; then sudo apt-get install -qq qt53base qt53xmlpatterns qt53svg; source /opt/qt53/bin/qt53-env.sh ; fi
      #- if [ "$QT_BASE" = "54" ] ; then sudo apt-get install -qq qt54base qt54xmlpatterns qt54svg; source /opt/qt54/bin/qt54-env.sh ; fi
      #- if [ "$QT_BASE" = "55" ] ; then sudo apt-get install -qq qt55base qt55xmlpatterns qt55svg; source /opt/qt55/bin/qt55-env.sh ; fi
      #- if [ "$QT_BASE" = "56" ] ; then sudo apt-get install -qq qt56base qt56xmlpatterns qt56svg; source /opt/qt56/bin/qt56-env.sh ; fi
      #- if [ "$QT_BASE" = "57" ] ; then sudo apt-get install -qq qt57base qt57xmlpatterns qt57svg; source /opt/qt57/bin/qt57-env.sh ; fi
      #- if [ "$QT_BASE" = "58" ] ; then sudo apt-get install -qq qt58base qt58xmlpatterns qt58svg; source /opt/qt58/bin/qt58-env.sh ; fi
      #- if [ "$QT_BASE" = "59" ] ; then sudo apt-get install -qq qt59base qt59xmlpatterns qt59svg; source /opt/qt59/bin/qt59-env.sh ; fi
    - sudo apt-get -y install appstream libdbus-1-dev

before_script:
    #- if [ "$QT_BASE" == "48" ] ; then mkdir build && cd build && CXX=g++-5 CC=gcc-5 cmake -DQT_VERSION=Qt4 .. ; fi
    #- if [ "$QT_BASE" != "48" ] ; then mkdir build && cd build && CXX=g++-5 CC=gcc-5 cmake -DQT_VERSION=Qt5 .. ; fi

script:
      # Qt building
    - cd qt-everywhere-opensource-src-4.8.4
    - ./configure -fast -opensource -release -no-qt3support -fontconfig -dbus -sm -qt-libpng -qt-libjpeg -qt-libmng -qt-zlib -openssl -opengl desktop -xrender -webkit -confirm-license -continue
    - make -s
    - make install
    - export PATH=/usr/local/Trolltech/Qt-4.8.4:$(pwd)/bin:$PATH
    - echo $PATH
    - cd -
      # QCAD building
    - qmake -r
    - make release

after_success:
    - pwd
    - cd ..
    - find . -type d
    - find . -name "*.desktop"
    - find . -name "qcad.png"
    - # Generate AppImage
    - mkdir -p ./appdir/usr/share/applications/ ; cp ./appimage/qcad.desktop ./appdir/usr/share/applications/ ; cp ./appimage/qcad.desktop ./appdir/
    - mkdir -p ./appdir/usr/share/icons/hicolor/512x512/apps/ ; cp ./appimage/qcad.png ./appdir/usr/share/icons/hicolor/512x512/apps/ ; cp ./appimage/qcad.png ./appdir/
    - mkdir -p ./appdir/usr/share/metainfo/ ; cp ./appimage/qcad.appdata.xml ./appdir/usr/share/metainfo/ ; cp ./appimage/qcad.appdata.xml ./appdir/
    - find ./appdir -type d
    - find ./appdir -type f
    - ls -l ./appdir
    - cd ./build
    - readlink -f ../appdir
    - make install DESTDIR=$(readlink -f ../appdir)
    - cd ..
    - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    - chmod a+x linuxdeployqt*.AppImage
    - unset QTDIR ; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
    - export VERSION=$(git rev-parse --short HEAD)-$CC
    - ./linuxdeployqt*.AppImage ./appdir/usr/bin/qcad -bundle-non-qt-libs -appimage -verbose=2
    - find . -name "*.AppImage"
    - find . -name "*.AppImage" -ls
    - mv ./qcad*.AppImage       ./qcad-made-by-linuxdeployqt-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage
    - mv ./qcad*.AppImage.zsync ./qcad-made-by-linuxdeployqt-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage.zsync
    - ./linuxdeployqt*.AppImage --appimage-extract                   # -verbose=2 # Pah! This prevented my extracting.
    - find ./squashfs-root -name appimagetool
    - ls -1d */
    - find . -type d
    - find . -name "*.AppImage"
    - PATH=./squashfs-root/usr/bin:$PATH ./squashfs-root/usr/bin/appimagetool -v -u -n 'gh-releases-zsync|KurtPfeifle|qcad|continuous|qcad-qt$QT_BASE*x86_64.AppImage.zsync' ./appdir/ ./qcad-made-by-appimagetool-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage
    - pwd
    - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
    - find . -name "qcad*.AppImage*"
    #- mv ./qcad*.AppImage       ./qcad-qt$QT_BASE-xperimental-x86_64.AppImage
    #- mv ./qcad*.AppImage.zsync ./qcad-qt$QT_BASE-xperimental-x86_64.AppImage.zsync
    #- cp ./qcad-qt$QT_BASE-xperimental{,-$VERSION}-x86_64.AppImage
    #- cp ./qcad-qt$QT_BASE-xperimental{,-$VERSION}-x86_64.AppImage.zsync
    #- sha512sum ./qcad-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage > ./qcad-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage.sha512
    #- sha512sum ./qcad-qt$QT_BASE-xperimental-x86_64.AppImage          > ./qcad-qt$QT_BASE-xperimental-x86_64.AppImage.sha512
    - find . -name "*.AppImage*"
    - #if [ "$TRAVIS_BRANCH" == "TRAVIS_TAG" ] ; then
    - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-x86_64.AppImage
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-x86_64.AppImage.sha512
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-x86_64.AppImage.zsync
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage.sha512
    #- bash upload.sh qcad-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage.zsync
    - bash upload.sh qcad-*.AppImage*
    - #; fi
    - #if [ "$TRAVIS_BRANCH" != "TRAVIS_TAG" ] ; then
    - curl --upload-file ./qcad-made-by-appimagetool-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage  https://transfer.sh/qcad-made-by-appimagetool-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage
    - curl --upload-file ./qcad-made-by-linuxdeployqt-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage https://transfer.sh/qcad-made-by-linuxdeployqt-qt$QT_BASE-xperimental-$VERSION-x86_64.AppImage
    - #; fi
    - find . -name "*DebuggerCore*"
    - find . -iname "*debuggercore*"
    - find . -name libDebuggerCore.so
    - find . -name libDebuggerCore.so -ls
    - find . -name "*.AppImage*" -ls
    - ls -l *.AppImage*
    - ls -lh *.AppImage*



branches:
    only:
        - master
        - patch-1

os:
    - linux

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - build-essential
            - libboost-dev
            - gcc-5
            - g++-5
            - cmake3
